{"version":3,"sources":["pages/invoices-list-demo.js"],"names":["InvoicesListDemo","_classCallCheck","this","init","table","searchRecords","selecter","clearSelected","$","fn","dataTable","moment","DataTable","dom","language","paginate","previous","next","autoWidth","ajax","deferRender","order","columns","data","className","orderable","searchable","columnDefs","targets","render","type","row","meta","concat","number","context","status","amount","paid","self","on","e","filterBy","val","hasFilter","column","search","draw","$selectedRow","length","$info","$badge","addClass","text","remove","prepend","document","isChecked","prop","getSelectedInfo","$selectors","clearSelectedRows","trigger"],"mappings":"uZAGMA,4BAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAOLD,KAAKE,MAAQF,KAAKE,QAClBF,KAAKG,gBACLH,KAAKI,WACLJ,KAAKK,gDAOL,OAFAC,EAAEC,GAAGC,UAAUC,OAAO,cAEfH,EAAE,kBAAkBI,UAAU,CACnCC,IAAG,4CAEHC,SAAU,CACRC,SAAU,CACRC,SAAU,yCACVC,KAAM,4CAGVC,WAAW,EACXC,KAAM,iCACNC,aAAa,EACbC,MAAO,CAAE,EAAG,OACZC,QAAS,CACP,CAAEC,KAAM,SAAUC,UAAW,2BAA4BC,WAAW,EAAOC,YAAY,GACvF,CAAEH,KAAM,SAAUC,UAAW,gBAC7B,CAAED,KAAM,SAAUC,UAAW,gBAC7B,CAAED,KAAM,UAAWC,UAAW,gBAC9B,CAAED,KAAM,SAAUC,UAAW,gBAC7B,CAAED,KAAM,SAAUC,UAAW,gBAC7B,CAAED,KAAM,OAAQC,UAAW,gBAC3B,CAAED,KAAM,UAAWC,UAAW,gBAC9B,CAAED,KAAM,UAAWC,UAAW,0BAA2BC,WAAW,EAAOC,YAAY,IAEzFC,WAAY,CAAC,CACXC,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,kKAAAC,OACkFF,EAAIG,OADtF,aAAAD,OACwGF,EAAIG,OAD5G,8DAAAD,OAE8CF,EAAIG,OAFlD,kCAKD,CACDN,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,+BAAAC,OAAsCF,EAAIG,OAA1C,UAED,CACDN,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,yCAAAC,OAAgDF,EAAII,QAApD,MAAAF,OAAgEF,EAAIK,OAApE,aAED,CACDR,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,2BAAAC,OAAkCF,EAAIM,OAAtC,YAED,CACDT,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,2BAAAC,OAAkCF,EAAIO,KAAtC,YAED,CACDV,QAAS,EACTC,OAAQ,SAAUN,EAAMO,EAAMC,EAAKC,GACjC,MAAA,yXAAAC,OAMiBF,EAAIG,OANrB,+DAAAD,OAOiBF,EAAIG,OAPrB,+DAAAD,OAQiBF,EAAIG,OARrB,4HAAAD,OAUiBF,EAAIG,OAVrB,uEAAAD,OAWiBF,EAAIG,OAXrB,0HAAAD,OAaiBF,EAAIG,OAbrB,yHAsBN,IAAMK,EAAOrC,KAEbM,EAAE,4BAA4BgC,GAAG,qBAAsB,SAAUC,GAC/D,IAAIC,EAAWlC,EAAE,aAAamC,MAC1BC,EAA0B,KAAdF,EAGhBH,EAAKnC,MACFyC,OAAO,GACPC,OAAO,IACPC,OAECH,EACFL,EAAKnC,MACFyC,OAAO,GACPC,OAAOJ,GACPK,OAEHR,EAAKnC,MACF2C,mDAMP,IAAMC,EAAexC,EAAE,uCAAuCyC,OACxDC,EAAQ1C,EAAE,cACV2C,EAAS3C,EAAE,WACd4C,SAAS,qCACTC,KAFY,GAAApB,OAEJe,EAFI,cAIfxC,EAAE,sBAAsB8C,SAEpBN,GACFE,EAAMK,QAAQJ,sCAKhB,IAAMZ,EAAOrC,KAEbM,EAAEgD,UAAUhB,GAAG,SAAU,gBAAiB,WACxC,IAAMiB,EAAYjD,EAAEN,MAAMwD,KAAK,WAC/BlD,EAAE,+BAA+BkD,KAAK,UAAWD,GAGjDlB,EAAKoB,oBAENnB,GAAG,SAAU,8BAA+B,WAC3C,IAAMoB,EAAapD,EAAE,+BACfwC,EAAexC,EAAE,uCAAuCyC,OACxDS,EAAOV,IAAiBY,EAAWX,OACrC,UACA,gBAGJzC,EAAE,iBACCkD,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAEfV,GACFxC,EAAE,iBAAiBkD,KAAKA,GAAM,GAIhCnB,EAAKoB,4DAKP,IAAMpB,EAAOrC,KAEbM,EAAE,kBAAkBgC,GAAG,UAAW,WAChCD,EAAKsB,sBAEPrD,EAAE,iBAAiBgC,GAAG,QAAS,WAC7BD,EAAKsB,kEAKPrD,EAAE,iBACCkD,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAChBI,QAAQ,mBASftD,EAAEgD,UAAUhB,GAAG,aAAc,WAC3B,IAAIxC","file":"../../javascript/pages/invoices-list-demo.min.js","sourcesContent":["// DataTables Demo\n// =============================================================\n\nclass InvoicesListDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.table = this.table()\n    this.searchRecords()\n    this.selecter()\n    this.clearSelected()\n  }\n\n  table () {\n    // register to support date sorting\n    $.fn.dataTable.moment('DD/MM/YYYY')\n\n    return $('#invoicesTable').DataTable({\n      dom: `<'table-responsive'tr>\n        <'mt-4'p>`,\n      language: {\n        paginate: {\n          previous: '<i class=\"fa fa-lg fa-angle-left\"></i>',\n          next: '<i class=\"fa fa-lg fa-angle-right\"></i>'\n        }\n      },\n      autoWidth: false,\n      ajax: 'assets/data/invoices-list.json',\n      deferRender: true,\n      order: [ 3, 'dec' ],\n      columns: [\n        { data: 'number', className: 'col-checker align-middle', orderable: false, searchable: false },\n        { data: 'number', className: 'align-middle' },\n        { data: 'client', className: 'align-middle' },\n        { data: 'duedate', className: 'align-middle' },\n        { data: 'status', className: 'align-middle' },\n        { data: 'amount', className: 'align-middle' },\n        { data: 'paid', className: 'align-middle' },\n        { data: 'balance', className: 'align-middle' },\n        { data: 'actions', className: 'align-middle text-right', orderable: false, searchable: false }\n      ],\n      columnDefs: [{\n        targets: 0,\n        render: function (data, type, row, meta) {\n          return `<div class=\"custom-control custom-control-nolabel custom-checkbox\">\n            <input type=\"checkbox\" class=\"custom-control-input\" name=\"selectedRow[]\" id=\"p${row.number}\" value=\"${row.number}\">\n            <label class=\"custom-control-label\" for=\"p${row.number}\"></label>\n          </div>`\n        }\n      }, {\n        targets: 1,\n        render: function (data, type, row, meta) {\n          return `<a href=\"page-invoice.html\">${row.number}</a>`\n        }\n      }, {\n        targets: 4,\n        render: function (data, type, row, meta) {\n          return `<span class=\"badge badge-subtle badge-${row.context}\">${row.status}</span>`\n        }\n      }, {\n        targets: 5,\n        render: function (data, type, row, meta) {\n          return `<div class=\"text-muted\">${row.amount}</div>`\n        }\n      }, {\n        targets: 6,\n        render: function (data, type, row, meta) {\n          return `<div class=\"text-muted\">${row.paid}</div>`\n        }\n      }, {\n        targets: 8,\n        render: function (data, type, row, meta) {\n          return `<div class=\"dropdown\">\n            <button type=\"button\" class=\"btn btn-secondary btn-icon btn-sm\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <i class=\"fas fa-ellipsis-h\"></i>\n            </button>\n            <div class=\"dropdown-arrow\"></div>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">View</a>\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">Edit</a>\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">Send reminder</a>\n              <div class=\"dropdown-divider\"></div>\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">Download pdf</a>\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">Share to...</a>\n              <div class=\"dropdown-divider\"></div>\n              <a href=\"#!${row.number}\" class=\"dropdown-item\">Delete</a>\n            </div>\n          </div>`\n        }\n      }]\n    })\n  }\n\n  searchRecords () {\n    const self = this\n\n    $('#table-search, #filterBy').on('keyup change focus', function (e) {\n      let filterBy = $('#filterBy').val()\n      let hasFilter = filterBy  !== ''\n\n      // reset search term\n      self.table\n        .column(4)\n        .search('')\n        .draw()\n\n      if (hasFilter) {\n        self.table\n          .column(4)\n          .search(filterBy)\n          .draw()\n      } else {\n        self.table\n          .draw()\n      }\n    })\n  }\n\n  getSelectedInfo () {\n    const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n    const $info = $('.thead-btn')\n    const $badge = $('<span/>')\n      .addClass('selected-row-info text-muted pl-1')\n      .text(`${$selectedRow} selected`)\n    // remove existing info\n    $('.selected-row-info').remove()\n    // add current info\n    if ($selectedRow) {\n      $info.prepend($badge)\n    }\n  }\n\n  selecter () {\n    const self = this\n\n    $(document).on('change', '#check-handle', function () {\n      const isChecked = $(this).prop('checked')\n      $('input[name=\"selectedRow[]\"]').prop('checked', isChecked)\n\n      // get info\n      self.getSelectedInfo()\n    })\n    .on('change', 'input[name=\"selectedRow[]\"]', function () {\n      const $selectors = $('input[name=\"selectedRow[]\"]')\n      const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n      const prop = $selectedRow === $selectors.length\n        ? 'checked'\n        : 'indeterminate'\n\n      // reset props\n      $('#check-handle')\n        .prop('indeterminate', false)\n        .prop('checked', false)\n\n      if ($selectedRow) {\n        $('#check-handle').prop(prop, true)\n      }\n\n      // get info\n      self.getSelectedInfo()\n    })\n  }\n\n  clearSelected () {\n    const self = this\n    // clear selected rows\n    $('#invoicesTable').on('page.dt', function () {\n      self.clearSelectedRows()\n    })\n    $('#clear-search').on('click', function () {\n      self.clearSelectedRows()\n    })\n  }\n\n  clearSelectedRows () {\n    $('#check-handle')\n      .prop('indeterminate', false)\n      .prop('checked', false)\n      .trigger('change')\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new InvoicesListDemo()\n})\n"]}