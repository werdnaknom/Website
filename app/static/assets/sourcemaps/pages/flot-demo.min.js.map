{"version":3,"sources":["pages/flot-demo.js"],"names":["FlotDemo","_classCallCheck","this","init","lineChart","barChart","areaChart","horizontalBarChart","combineChart","realtimeChart","handleTooltips","sin","cos","i","push","Math","dataset","data","label","options","series","lines","show","points","fillColor","Looper","skin","getColors","white","colors","brand","purple","teal","grid","hoverable","borderWidth","color","getMutedColor","legend","position","xaxis","tickLength","yaxis","min","max","$","extend","flotDefaultOptions","plot","bars","barWidth","align","opacity","mode","year","Date","getTime","america","uerope","indigo","fill","axisLabel","axisLabelUseCanvas","axisLabelFontSizePixels","axisLabelPadding","axisLabelFontFamily","axisLabelColour","tickSize","timeformat","tickFormatter","v","axis","noColumns","dataSet_barhor","horizontal","lineWidth","ticks","getDate","month","day","wind","pressure","temp","dataset_combine","yaxes","data_realtime","getRandomData","slice","length","y","random","res","shadowSize","flotRealtime","update","setData","draw","setTimeout","appendTo","document","on","event","pos","item","x","datapoint","toFixed","undefined","dataIndex","html","css","top","pageY","left","pageX","fadeIn","hide","concat","getFullYear","borderColor","getDarkColor","backgroundColor","getLightColor","date","unit"],"mappings":"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","file":"../../javascript/pages/flot-demo.min.js","sourcesContent":["// Flot Chart Demo\n// =============================================================\n\nclass FlotDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n    // event handlers\n    this.lineChart()\n    this.barChart()\n    this.areaChart()\n    this.horizontalBarChart()\n    this.combineChart()\n    this.realtimeChart()\n    this.handleTooltips()\n  }\n\n  lineChart () {\n    let sin = []\n    let cos = []\n\n    for (let i = 0; i < 14; i += 0.5) {\n      sin.push([i, Math.sin(i)])\n      cos.push([i, Math.cos(i)])\n    }\n\n    const dataset = [\n      {\n        data: sin,\n        label: 'sin(x)'\n      },\n      { data: cos,\n        label: 'cos(x)'\n      }\n    ]\n\n    let options = {\n      series: {\n        lines: { show: true },\n        points: {\n          fillColor: Looper.skin === 'dark' ? Looper.getColors('gray')[200] : Looper.white,\n          show: true\n        }\n      },\n      colors: [\n        Looper.colors.brand.purple,\n        Looper.colors.brand.teal\n      ],\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      },\n      legend: { position: 'se' },\n      xaxis: { tickLength: 0 },\n      yaxis: { min: -1.2, max: 1.2 }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    $('#flot-line').plot(dataset, options)\n  }\n\n  barChart () {\n    const dataset = [['January', 10], ['February', 8], ['March', 4], ['April', 13], ['May', 17], ['June', 9]]\n    let options = {\n      series: {\n        bars: {\n          show: true,\n          barWidth: 0.5,\n          align: 'center',\n          fillColor: {\n            colors: [{ opacity: 0.9 }, { opacity: 0.1 }]\n          }\n        }\n      },\n      colors: [Looper.colors.brand.teal],\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      },\n      xaxis: { mode: 'categories', tickLength: 0 }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    $('#flot-bar').plot([dataset], options)\n  }\n\n  areaChart () {\n    const year = function (year) {\n      return new Date(year, 1, 1).getTime()\n    }\n    // raw data\n    const america = [\n      [year(1800), 700], [year(1850), 2600], [year(1900), 8200], [year(1950), 17162], [year(1955), 18688],\n      [year(1960), 20415], [year(1965), 21957], [year(1970), 23194], [year(1975), 24343], [year(1980), 25607],\n      [year(1985), 26946], [year(1990), 28355], [year(1995), 29944], [year(2000), 31592], [year(2005), 33216],\n      [year(2010), 34412]\n    ]\n    const uerope = [\n      [year(1800), 20300], [year(1850), 27600], [year(1900), 40800], [year(1950), 54740], [year(1955), 57518],\n      [year(1960), 60140], [year(1965), 63403], [year(1970), 65586], [year(1975), 67554], [year(1980), 69243],\n      [year(1985), 70601], [year(1990), 72158], [year(1995), 72741], [year(2000), 72799], [year(2005), 72472],\n      [year(2010), 72708]\n    ]\n    const asia = [\n      [year(1800), 63500], [year(1850), 80900], [year(1900), 94700], [year(1950), 139849], [year(1955), 154195],\n      [year(1960), 167434], [year(1965), 189942], [year(1970), 214312], [year(1975), 239751], [year(1980), 263234],\n      [year(1985), 288755], [year(1990), 316781], [year(1995), 343005], [year(2000), 367974], [year(2005), 391751],\n      [year(2010), 411963]\n    ]\n    // dataset\n    const dataset = [\n      { label: 'Asia', data: asia, color: Looper.colors.brand.purple },\n      { label: 'Europe', data: uerope, color: Looper.colors.brand.teal },\n      { label: 'North America', data: america, color: Looper.colors.brand.indigo }\n    ]\n\n    let options = {\n      series: {\n        lines: {\n          show: true,\n          fill: true\n        }\n      },\n      xaxis: {\n        tickLength: 0,\n        axisLabel: 'Year',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 10,\n        axisLabelFontFamily: 'inherit, sans-serif',\n        axisLabelColour: Looper.getMutedColor(),\n        mode: 'time',\n        tickSize: [20, 'year'],\n        timeformat: '%Y'\n      },\n      yaxis: {\n        axisLabel: 'Population (multiply by 10,000)',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 3,\n        axisLabelFontFamily: 'inherit, sans-serif',\n        axisLabelColour: Looper.getMutedColor(),\n        tickFormatter: function (v, axis) {\n          return v\n        }\n      },\n      legend: {\n        noColumns: 3,\n        position: 'nw'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    // init chart\n    $('#flot-area').plot(dataset, options)\n  }\n\n  horizontalBarChart () {\n    const data_barhor = [\n      [1582.3, 0], //Gold/oz\n      [28.95, 1],  //Silver/oz\n      [1603, 2],   //PLATINUM /oz\n      [774, 3],    //PALLADIUM /oz\n      [1245, 4],   //Rhodium\n      [85, 5],     //Ruthenium\n      [1025, 6]    //Iridium\n    ]\n    const dataSet_barhor = [\n      { label: 'Precious Metal Price', data: data_barhor, color: Looper.colors.brand.teal }\n    ]\n    const ticks_barhor = [\n      [0, 'Gold'], [1, 'Silver'], [2, 'Platinum'], [3, 'Palldium'], [4, 'Rhodium'], [5, 'Ruthenium'], [6, 'Iridium']\n    ]\n\n    let options = {\n      series: {\n        bars: {\n          show: true\n        }\n      },\n      bars: {\n        align: 'center',\n        barWidth: 0.5,\n        horizontal: true,\n        fillColor: { colors: [{ opacity: 1 }, { opacity: 1}] },\n        lineWidth: 1\n      },\n      xaxis: {\n        axisLabel: 'Price (USD/oz)',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 10,\n        axisLabelFontFamily: 'inherit, sans-serif',\n        axisLabelColour: Looper.getMutedColor(),\n        tickFormatter: function (v, axis) {\n          return v\n        },\n        max: 2000\n      },\n      yaxis: {\n        axisLabel: 'Precious Metals',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 3,\n        axisLabelFontFamily: 'inherit, sans-serif',\n        axisLabelColour: Looper.getMutedColor(),\n        tickLength: 0,\n        ticks: ticks_barhor\n      },\n      legend: {\n        noColumns: 0,\n        position: 'ne'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    // init chart\n    $('#flot-barhor').plot(dataSet_barhor, options)\n  }\n\n  combineChart () {\n    const getDate = function (year, month, day) {\n      return new Date(year, month - 1, day).getTime()\n    }\n    const wind = [\n      [getDate(2012, 1, 1), 11], [getDate(2012, 1, 2), 9], [getDate(2012, 1, 3), 7], [getDate(2012, 1, 4), 13],\n      [getDate(2012, 1, 5), 11], [getDate(2012, 1, 6), 11], [getDate(2012, 1, 7), 9], [getDate(2012, 1, 8), 10],\n      [getDate(2012, 1, 9), 7], [getDate(2012, 1, 10), 11], [getDate(2012, 1, 11), 7], [getDate(2012, 1, 12), 6],\n      [getDate(2012, 1, 13), 4], [getDate(2012, 1, 14), 5], [getDate(2012, 1, 15), 11], [getDate(2012, 1, 16), 8],\n      [getDate(2012, 1, 17), 9], [getDate(2012, 1, 18), 16], [getDate(2012, 1, 19), 11], [getDate(2012, 1, 20), 18],\n      [getDate(2012, 1, 21), 8], [getDate(2012, 1, 22), 17], [getDate(2012, 1, 23), 11], [getDate(2012, 1, 24), 13],\n      [getDate(2012, 1, 25), 11], [getDate(2012, 1, 26), 11], [getDate(2012, 1, 27), 9], [getDate(2012, 1, 28), 8],\n      [getDate(2012, 1, 29), 7], [getDate(2012, 1, 30), 8], [getDate(2012, 1, 31), 20]\n    ]\n    const pressure = [\n      [getDate(2012, 1, 1), 320], [getDate(2012, 1, 2), 430], [getDate(2012, 1, 3), 540], [getDate(2012, 1, 4), 560],\n      [getDate(2012, 1, 5), 964], [getDate(2012, 1, 6), 1022], [getDate(2012, 1, 7), 436], [getDate(2012, 1, 8), 750],\n      [getDate(2012, 1, 9), 648], [getDate(2012, 1, 10), 639], [getDate(2012, 1, 11), 654], [getDate(2012, 1, 12), 300],\n      [getDate(2012, 1, 13), 739], [getDate(2012, 1, 14), 748], [getDate(2012, 1, 15), 768], [getDate(2012, 1, 16), 1023],\n      [getDate(2012, 1, 17), 869], [getDate(2012, 1, 18), 489], [getDate(2012, 1, 19), 987], [getDate(2012, 1, 20), 980],\n      [getDate(2012, 1, 21), 580], [getDate(2012, 1, 22), 387], [getDate(2012, 1, 23), 345], [getDate(2012, 1, 24), 560],\n      [getDate(2012, 1, 25), 405], [getDate(2012, 1, 26), 876], [getDate(2012, 1, 27), 543], [getDate(2012, 1, 28), 650],\n      [getDate(2012, 1, 29), 600], [getDate(2012, 1, 30), 900], [getDate(2012, 1, 31), 531]\n    ]\n    const temp = [\n      [getDate(2012, 1, 1), 1], [getDate(2012, 1, 2), -2], [getDate(2012, 1, 3), -2], [getDate(2012, 1, 4), 1],\n      [getDate(2012, 1, 5), 3], [getDate(2012, 1, 6), 4], [getDate(2012, 1, 7), 5], [getDate(2012, 1, 8), 6],\n      [getDate(2012, 1, 9), 7], [getDate(2012, 1, 10), 7], [getDate(2012, 1, 11), 6], [getDate(2012, 1, 12), 7],\n      [getDate(2012, 1, 13), 8], [getDate(2012, 1, 14), 8], [getDate(2012, 1, 15), 3], [getDate(2012, 1, 16), 2],\n      [getDate(2012, 1, 17), 4], [getDate(2012, 1, 18), -1], [getDate(2012, 1, 19), 5], [getDate(2012, 1, 20), 6],\n      [getDate(2012, 1, 21), -2], [getDate(2012, 1, 22), -7], [getDate(2012, 1, 23), -9], [getDate(2012, 1, 24), -8],\n      [getDate(2012, 1, 25), -7], [getDate(2012, 1, 26), -6], [getDate(2012, 1, 27), -3], [getDate(2012, 1, 28), 1],\n      [getDate(2012, 1, 29), 6], [getDate(2012, 1, 30), 9], [getDate(2012, 1, 31), 8]\n    ]\n    // dataset\n    const dataset_combine = [\n      {\n        label: 'Sea Level Pressure',\n        data: pressure,\n        color: Looper.getMutedColor(),\n        bars: {\n          show: true,\n          align: 'center',\n          barWidth: 24 * 60 * 60 * 600,\n          lineWidth:1\n        }\n      },\n      {\n        label: 'Wind Speed',\n        data: wind,\n        yaxis: 2,\n        color: Looper.colors.brand.purple,\n        points: { fillColor: Looper.colors.brand.purple, show: true },\n        lines: {show:true}\n      },\n      {\n        label: 'Temperature',\n        data: temp,\n        yaxis: 3,\n        color: Looper.colors.brand.teal,\n        points: { fillColor: Looper.colors.brand.teal, show: true },\n        lines: { show: true }\n      }\n    ]\n\n    let options = {\n      xaxis: {\n        mode: 'time',\n        tickSize: [3, 'day'],\n        tickLength: 0,\n        axisLabel: 'Date',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelFontFamily: 'inherit, Arial',\n        axisLabelColour: Looper.getMutedColor(),\n        axisLabelPadding: 10\n      },\n      yaxes: [{\n          position: 'left',\n          max: 1070,\n          axisLabel: 'Sea Level Pressure (hPa)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'inherit, Arial',\n          axisLabelColour: Looper.getMutedColor(),\n          axisLabelPadding: 3\n        },\n        {\n          position: 'right',\n          axisLabel: 'Wind Speed (km/hr)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'inherit, Arial',\n          axisLabelColour: Looper.getMutedColor(),\n          axisLabelPadding: 3\n        },\n        {\n          position: 'right',\n          axisLabel: 'Temperature (°C)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'inherit, Arial',\n          axisLabelColour: Looper.getMutedColor(),\n          axisLabelPadding: 3\n        }\n      ],\n      legend: {\n        noColumns: 1,\n        position: 'nw'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    // init chart\n    $('#flot-combine').plot(dataset_combine, options)\n  }\n\n  realtimeChart () {\n    const totalPoints = 300\n    const updateInterval = 1000\n    let data_realtime = []\n    const getRandomData = function () {\n      data_realtime = data_realtime.slice(1)\n      // Do a random walk\n      while (data_realtime.length < totalPoints) {\n        let prev = data_realtime.length > 0 ? data_realtime[data_realtime.length - 1] : 50\n        let y = prev + Math.random() * 10 - 5\n\n        if (y < 0) {\n          y = 0\n        } else if (y > 100) {\n          y = 100\n        }\n        data_realtime.push(y)\n      }\n      // Zip the generated y values with the x values\n      let res = []\n      for (let i = 0; i < data_realtime.length; ++i) {\n        res.push([i, data_realtime[i]])\n      }\n      return res\n    }\n    const update = function () {\n      flotRealtime.setData([{ data: getRandomData(), color: Looper.colors.brand.teal }])\n      // Since the axes don't change, we don't need to call plot.setupGrid()\n      flotRealtime.draw()\n      setTimeout(update, updateInterval)\n    }\n\n    const dataset = [{\n      data: getRandomData(),\n      color: Looper.colors.brand.teal\n    }]\n\n    let options = {\n      series: {\n        lines: {\n          show: true,\n          fill: true\n        },\n        shadowSize: 0   // Drawing is faster without shadows\n      },\n      yaxis: {\n        min: 0,\n        max: 100\n      },\n      xaxis: {\n        show: false\n      },\n      grid: {\n        borderWidth: 0,\n        color: Looper.getMutedColor()\n      }\n    }\n\n    // merge our setting with flot options\n    options = $.extend(true, {}, Looper.flotDefaultOptions(), options)\n\n    // init chart realtime\n    const flotRealtime = $.plot('#flot-realtime', dataset, options)\n\n    update()\n  }\n\n  handleTooltips () {\n    // line and bar\n    $('<div id=\"flot-tooltip\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-line, #flot-bar', (event, pos, item) => {\n      if (item) {\n        let x = item.datapoint[0].toFixed(2)\n        let y = item.datapoint[1].toFixed(2)\n        let series = (item.series.label === undefined) ? item.series.data[item.dataIndex][0] : item.series.label + ' of ' + x\n\n        $('#flot-tooltip')\n          .html(series + ' = ' + y)\n          .css({\n            top: item.pageY + 5,\n            left: item.pageX + 5\n          })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip').hide()\n      }\n    })\n\n    // flot area\n    $('<div id=\"flot-tooltip2\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-area', (event, pos, item) => {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n\n        $('#flot-tooltip2')\n          .html(`<strong>${item.series.label}</strong><br>${new Date(x).getFullYear()} : <strong>Population : ${y}</strong> <br> <em>(multiply by 10,000)</em>`)\n          .css({\n            top: item.pageY + 5,\n            left: item.pageX + 5,\n            borderColor: color,\n            color: Looper.getDarkColor(),\n            backgroundColor: Looper.getLightColor()\n          })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip2').hide()\n      }\n    })\n\n    // barhor\n    $('<div id=\"flot-tooltip3\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-barhor', (event, pos, item) => {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n\n        $('#flot-tooltip3').html(`<strong>${item.series.label} :</strong> ${x}`)\n          .css({\n            top: item.pageY + 9,\n            left: item.pageX - 100,\n            borderColor: color,\n            color: Looper.getDarkColor(),\n            backgroundColor: Looper.getLightColor()\n          })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip3').hide()\n      }\n    })\n\n    // combine\n    $('<div id=\"flot-tooltip4\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-combine', (event, pos, item) => {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n        let date = 'Jan ' + new Date(x).getDate()\n        let unit = ''\n\n        if (item.series.label == 'Sea Level Pressure') {\n          unit = 'hPa'\n        } else if (item.series.label == 'Wind Speed') {\n          unit = 'km/hr'\n        } else if (item.series.label == 'Temperature') {\n          unit = '°C'\n        }\n\n        $('#flot-tooltip4').html(`'<strong>${item.series.label}'</strong><br>${date}' : <strong>${y}'</strong> ${unit}`)\n          .css({\n            top: item.pageY + 5,\n            left: item.pageX + 5,\n            borderColor: color,\n            color: Looper.getDarkColor(),\n            backgroundColor: Looper.getLightColor()\n          })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip4').hide()\n      }\n    })\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new FlotDemo()\n})\n"]}