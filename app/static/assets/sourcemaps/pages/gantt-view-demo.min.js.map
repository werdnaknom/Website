{"version":3,"sources":["pages/gantt-view-demo.js"],"names":["GanttView","_classCallCheck","this","init","handleGantt","handleGanttView","tasks","getTasks","gantt","Gantt","view_mode","language","on_click","task","on_date_change","start","end","on_progress_change","progress","on_view_change","mode","$","on","view","val","change_view_mode","name","id","dependencies","custom_class","document"],"mappings":"uZAGMA,qBAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAOLD,KAAKE,cACLF,KAAKG,wDAIL,IAAMC,EAAQJ,KAAKK,WAEnBL,KAAKM,MAAQ,IAAIC,MAAM,gBAAiBH,EAAO,CAC7CI,UAAW,MACXC,SAAU,KACVC,SAAU,SAAUC,KAGpBC,eAAgB,SAASD,EAAME,EAAOC,KAGtCC,mBAAoB,SAASJ,EAAMK,KAGnCC,eAAgB,SAASC,iDAO3B,IAAMZ,EAAQN,KAAKM,MACnBa,EAAE,2BAA2BC,GAAG,SAAU,WACxC,IAAMC,EAAOF,EAAEnB,MAAMsB,MAErBhB,EAAMiB,iBAAiBF,wCAKzB,MAAO,CACL,CACER,MAAO,aACPC,IAAK,aACLU,KAAM,mBACNC,GAAI,SACJT,SAAU,IAEZ,CACEH,MAAO,aACPC,IAAK,aACLU,KAAM,oBACNC,GAAI,SACJT,SAAU,GACVU,aAAc,UAEhB,CACEb,MAAO,aACPC,IAAK,aACLU,KAAM,mBACNC,GAAI,SACJT,SAAU,GACVU,aAAc,UAEhB,CACEb,MAAO,aACPC,IAAK,aACLU,KAAM,SACNC,GAAI,SACJT,SAAU,EACVU,aAAc,UAEhB,CACEb,MAAO,aACPC,IAAK,aACLU,KAAM,SACNC,GAAI,SACJT,SAAU,GAEZ,CACEH,MAAO,aACPC,IAAK,aACLU,KAAM,WACNC,GAAI,SACJT,SAAU,EACVU,aAAc,SACdC,aAAc,iBAEhB,CACEd,MAAO,aACPC,IAAK,aACLU,KAAM,iBACNC,GAAI,SACJT,SAAU,cAWlBG,EAAES,UAAUR,GAAG,aAAc,WAC3B,IAAItB","file":"../../javascript/pages/gantt-view-demo.min.js","sourcesContent":["// Gantt View\n// =============================================================\n\nclass GanttView {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.handleGantt()\n    this.handleGanttView()\n  }\n\n  handleGantt () {\n    const tasks = this.getTasks()\n\n    this.gantt = new Gantt('#gantt-target', tasks, {\n      view_mode: 'Day',\n      language: 'en',\n      on_click: function (task) {\n        console.log(task)\n      },\n      on_date_change: function(task, start, end) {\n        console.log(task, start, end)\n      },\n      on_progress_change: function(task, progress) {\n        console.log(task, progress)\n      },\n      on_view_change: function(mode) {\n        console.log(mode)\n      }\n    })\n  }\n\n  handleGanttView () {\n    const gantt = this.gantt\n    $('input[name=\"ganttView\"]').on('change', function () {\n      const view = $(this).val()\n\n      gantt.change_view_mode(view)\n    })\n  }\n\n  getTasks () {\n    return [\n      {\n        start: '2018-11-01',\n        end: '2018-11-08',\n        name: 'Redesign website',\n        id: 'Task 0',\n        progress: 50\n      },\n      {\n        start: '2018-11-03',\n        end: '2018-11-06',\n        name: 'Write new content',\n        id: 'Task 1',\n        progress: 60,\n        dependencies: 'Task 0'\n      },\n      {\n        start: '2018-11-04',\n        end: '2018-11-08',\n        name: 'Apply new styles',\n        id: 'Task 2',\n        progress: 10,\n        dependencies: 'Task 1'\n      },\n      {\n        start: '2018-11-08',\n        end: '2018-11-09',\n        name: 'Review',\n        id: 'Task 3',\n        progress: 5,\n        dependencies: 'Task 2'\n      },\n      {\n        start: '2018-11-10',\n        end: '2018-11-12',\n        name: 'Deploy',\n        id: 'Task 4',\n        progress: 0\n      },\n      {\n        start: '2018-11-13',\n        end: '2018-11-13',\n        name: 'Go Live!',\n        id: 'Task 5',\n        progress: 0,\n        dependencies: 'Task 4',\n        custom_class: 'bar-milestone'\n      },\n      {\n        start: '2018-11-05',\n        end: '2019-01-12',\n        name: 'Long term task',\n        id: 'Task 6',\n        progress: 60\n      }\n    ]\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new GanttView()\n})\n"]}