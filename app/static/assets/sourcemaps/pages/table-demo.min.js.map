{"version":3,"sources":["pages/table-demo.js"],"names":["TableDemo","_classCallCheck","this","init","handleSelecter","self","$","document","on","isChecked","prop","getSelectedInfo","$selectors","$selectedRow","length","$info","$badge","addClass","text","concat","remove","prepend","trigger"],"mappings":"uZAGMA,qBAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAOLD,KAAKE,0DAIL,IAAMC,EAAOH,KAEbI,EAAEC,UAAUC,GAAG,SAAU,gBAAiB,WACxC,IAAMC,EAAYH,EAAEJ,MAAMQ,KAAK,WAC/BJ,EAAE,+BAA+BI,KAAK,UAAWD,GAGjDJ,EAAKM,oBAENH,GAAG,SAAU,8BAA+B,WAC3C,IAAMI,EAAaN,EAAE,+BACfO,EAAeP,EAAE,uCAAuCQ,OACxDJ,EAAOG,IAAiBD,EAAWE,OACrC,UACA,gBAGJR,EAAE,iBACCI,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAEfG,GACFP,EAAE,iBAAiBI,KAAKA,GAAM,GAIhCL,EAAKM,8DAKP,IAAME,EAAeP,EAAE,uCAAuCQ,OACxDC,EAAQT,EAAE,cACVU,EAASV,EAAE,WACdW,SAAS,qCACTC,KAFY,GAAAC,OAEJN,EAFI,cAIfP,EAAE,sBAAsBc,SAEpBP,GACFE,EAAMM,QAAQL,+CAKhBV,EAAE,iBACCI,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAChBY,QAAQ,mBASfhB,EAAEC,UAAUC,GAAG,aAAc,WAC3B,IAAIR","file":"../../javascript/pages/table-demo.min.js","sourcesContent":["// DataTables Demo\n// =============================================================\n\nclass TableDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.handleSelecter()\n  }\n\n  handleSelecter () {\n    const self = this\n\n    $(document).on('change', '#check-handle', function () {\n      const isChecked = $(this).prop('checked')\n      $('input[name=\"selectedRow[]\"]').prop('checked', isChecked)\n\n      // get info\n      self.getSelectedInfo()\n    })\n    .on('change', 'input[name=\"selectedRow[]\"]', function () {\n      const $selectors = $('input[name=\"selectedRow[]\"]')\n      const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n      const prop = $selectedRow === $selectors.length\n        ? 'checked'\n        : 'indeterminate'\n\n      // reset props\n      $('#check-handle')\n        .prop('indeterminate', false)\n        .prop('checked', false)\n\n      if ($selectedRow) {\n        $('#check-handle').prop(prop, true)\n      }\n\n      // get info\n      self.getSelectedInfo()\n    })\n  }\n\n  getSelectedInfo () {\n    const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n    const $info = $('.thead-btn')\n    const $badge = $('<span/>')\n      .addClass('selected-row-info text-muted pl-1')\n      .text(`${$selectedRow} selected`)\n    // remove existing info\n    $('.selected-row-info').remove()\n    // add current info\n    if ($selectedRow) {\n      $info.prepend($badge)\n    }\n  }\n\n  clearSelectedRows () {\n    $('#check-handle')\n      .prop('indeterminate', false)\n      .prop('checked', false)\n      .trigger('change')\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new TableDemo()\n})\n"]}