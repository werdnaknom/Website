{"version":3,"sources":["pages/select2-demo.js"],"names":["Select2Demo","_classCallCheck","this","init","fillSelectFromStates","remoteData","$","html","append","getStates","select2","ajax","url","dataType","delay","data","params","q","term","page","processResults","results","items","pagination","more","total_count","cache","escapeMarkup","markup","minimumInputLength","templateResult","repo","loading","text","owner","avatar_url","full_name","description","forks_count","stargazers_count","watchers_count","templateSelection","document","on"],"mappings":"uZAGMA,uBAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAMLD,KAAKE,uBACLF,KAAKG,iDAIL,OAAOC,EAAE,0BAA0BC,sDAInCD,EAAE,sCAAsCE,OAAON,KAAKO,kDA8BpDH,EAAE,wBAAwBI,QAAQ,CAChCC,KAAM,CACJC,IAAK,6CACLC,SAAU,OACVC,MAAO,IACPC,KAAM,SAAUC,GACd,MAAO,CACLC,EAAGD,EAAOE,KACVC,KAAMH,EAAOG,OAGjBC,eAAgB,SAAUL,EAAMC,GAO9B,OAFAA,EAAOG,KAAOH,EAAOG,MAAQ,EAEtB,CACLE,QAASN,EAAKO,MACdC,WAAY,CACVC,KAAqB,GAAdR,EAAOG,KAAaJ,EAAKU,eAItCC,OAAO,GAETC,aAAc,SAAUC,GAAU,OAAOA,GACzCC,mBAAoB,EACpBC,eAvDiB,SAAUC,GAC3B,GAAIA,EAAKC,QAAS,OAAOD,EAAKE,KAE9B,IAAIL,EAAS,8DACkCG,EAAKG,MAAMC,WAAa,sDAE/CJ,EAAKK,UAAY,QAazC,OAXIL,EAAKM,cACPT,GAAU,iCAAmCG,EAAKM,YAAc,UAGlET,GAAU,qGACsDG,EAAKO,YAAc,sEACpBP,EAAKQ,iBAAmB,qEACzBR,EAAKS,eAAiB,mCAyCpFC,kBAlC0B,SAAUV,GACpC,MAAO,0DAA4DA,EAAKG,MAAMC,WAAa,aAAeJ,EAAKK,WAAaL,EAAKE,iBA2CvI3B,EAAEoC,UAAUC,GAAG,aAAc,WAC3B,IAAI3C","file":"../../javascript/pages/select2-demo.min.js","sourcesContent":["// Select2 Demo\n// =============================================================\n\nclass Select2Demo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n    // event handlers\n    this.fillSelectFromStates()\n    this.remoteData()\n  }\n\n  getStates () {\n    return $('#select2-source-states').html()\n  }\n\n  fillSelectFromStates () {\n    $('#select2-single, #select2-multiple').append(this.getStates())\n  }\n\n  remoteData () {\n    const formatRepo = function (repo) {\n      if (repo.loading) return repo.text\n\n      let markup = '<div class=\"media\">' +\n        '<div class=\"user-avatar mr-2\"><img src=\"' + repo.owner.avatar_url + '\" /></div>' +\n        '<div class=\"media-body\">' +\n        '<h6 class=\"my-0\">' + repo.full_name + '</h6>'\n\n      if (repo.description) {\n        markup += '<div class=\"small text-muted\">' + repo.description + '</div>'\n      }\n\n      markup += '<ul class=\"list-inline small text-muted\">' +\n        '<li class=\"list-inline-item\"><i class=\"fa fa-flash\"></i> ' + repo.forks_count + ' Forks</li>' +\n        '<li class=\"list-inline-item\"><i class=\"fa fa-star\"></i> ' + repo.stargazers_count + ' Stars</li>' +\n        '<li class=\"list-inline-item\"><i class=\"fa fa-eye\"></i> ' + repo.watchers_count + ' Watchers</li>' +\n      '</ul>' +\n      '</div></div>'\n\n      return markup\n    }\n\n    const formatRepoSelection = function (repo) {\n      return '<div class=\"user-avatar user-avatar-xs mr-2\"><img src=\"' + repo.owner.avatar_url + '\" /></div>' + repo.full_name || repo.text\n    }\n\n    $('#select2-data-remote').select2({\n      ajax: {\n        url: 'https://api.github.com/search/repositories',\n        dataType: 'json',\n        delay: 250,\n        data: function (params) {\n          return {\n            q: params.term, // search term\n            page: params.page\n          }\n        },\n        processResults: function (data, params) {\n          // parse the results into the format expected by Select2\n          // since we are using custom formatting functions we do not need to\n          // alter the remote JSON data, except to indicate that infinite\n          // scrolling can be used\n          params.page = params.page || 1\n\n          return {\n            results: data.items,\n            pagination: {\n              more: (params.page * 30) < data.total_count\n            }\n          }\n        },\n        cache: true\n      },\n      escapeMarkup: function (markup) { return markup },\n      minimumInputLength: 1,\n      templateResult: formatRepo,\n      templateSelection: formatRepoSelection\n    })\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new Select2Demo()\n})\n"]}