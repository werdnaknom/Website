{"version":3,"sources":["pages/datatables-demo.js"],"names":["DataTablesDemo","_classCallCheck","this","init","table","searchRecords","selecter","clearSelected","table2","buttons","container","appendTo","unwrap","$","DataTable","dom","extend","autoPrint","language","paginate","previous","next","autoWidth","ajax","deferRender","order","columns","data","className","orderable","searchable","columnDefs","targets","render","type","row","meta","concat","id","img","name","self","on","e","filterBy","val","hasFilter","value","length","clearSelectedRows","search","draw","$selectedRow","$info","$badge","addClass","text","remove","prepend","document","isChecked","prop","getSelectedInfo","$selectors","trigger"],"mappings":"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","file":"../../javascript/pages/datatables-demo.min.js","sourcesContent":["// DataTables Demo\n// =============================================================\n\nclass DataTablesDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.table = this.table()\n    this.searchRecords()\n    this.selecter()\n    this.clearSelected()\n\n    this.table2()\n\n    // add buttons\n    this.table\n      .buttons()\n      .container()\n      .appendTo('#dt-buttons')\n      .unwrap()\n  }\n\n  table () {\n    return $('#myTable').DataTable({\n      dom: `<'text-muted'Bi>\n        <'table-responsive'tr>\n        <'mt-4'p>`,\n      buttons: [\n        'copyHtml5',\n        { extend: 'print', autoPrint: false }\n      ],\n      language: {\n        paginate: {\n          previous: '<i class=\"fa fa-lg fa-angle-left\"></i>',\n          next: '<i class=\"fa fa-lg fa-angle-right\"></i>'\n        }\n      },\n      autoWidth: false,\n      ajax: 'assets/data/products.json',\n      deferRender: true,\n      order: [ 1, 'asc' ],\n      columns: [\n        { data: 'id', className: 'col-checker align-middle', orderable: false, searchable: false },\n        { data: 'name', className: 'align-middle' },\n        { data: 'inventory', className: 'align-middle' },\n        { data: 'variant', className: 'align-middle' },\n        { data: 'prices', className: 'align-middle' },\n        { data: 'sales', className: 'align-middle' },\n        { data: 'id', className: 'align-middle text-right', orderable: false, searchable: false }\n      ],\n      columnDefs: [{\n        targets: 0,\n        render: function (data, type, row, meta) {\n          return `<div class=\"custom-control custom-control-nolabel custom-checkbox\">\n            <input type=\"checkbox\" class=\"custom-control-input\" name=\"selectedRow[]\" id=\"p${row.id}\" value=\"${row.id}\">\n            <label class=\"custom-control-label\" for=\"p${row.id}\"></label>\n          </div>`\n        }\n      }, {\n        targets: 1,\n        render: function (data, type, row, meta) {\n          return `<a href=\"#${row.id}\" class=\"tile tile-img mr-1\">\n            <img class=\"img-fluid\" src=\"assets/images/dummy/img-${row.img}.jpg\" alt=\"Card image cap\">\n          </a>\n          <a href=\"#${row.id}\">${row.name}</a>`\n        }\n      }, {\n        targets: 6,\n        render: function (data, type, row, meta) {\n          return `<a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"fa fa-pencil-alt\"></i></a>\n          <a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"far fa-trash-alt\"></i></a>`\n        }\n      }]\n    })\n  }\n\n  searchRecords () {\n    const self = this\n\n    $('#table-search, #filterBy').on('keyup change focus', function (e) {\n      let filterBy = $('#filterBy').val()\n      let hasFilter = filterBy  !== ''\n      let value = $('#table-search').val()\n\n      // clear selected rows\n      if (value.length && (e.type === 'keyup' || e.type === 'change' )) {\n        self.clearSelectedRows()\n      }\n\n      // reset search term\n      self.table\n        .search('')\n        .columns().search('')\n        .draw()\n\n      if (hasFilter) {\n        self.table\n          .columns(filterBy)\n          .search(value)\n          .draw()\n      } else {\n        self.table\n          .search(value)\n          .draw()\n      }\n    })\n  }\n\n  getSelectedInfo () {\n    const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n    const $info = $('.thead-btn')\n    const $badge = $('<span/>')\n      .addClass('selected-row-info text-muted pl-1')\n      .text(`${$selectedRow} selected`)\n    // remove existing info\n    $('.selected-row-info').remove()\n    // add current info\n    if ($selectedRow) {\n      $info.prepend($badge)\n    }\n  }\n\n  selecter () {\n    const self = this\n\n    $(document).on('change', '#check-handle', function () {\n      const isChecked = $(this).prop('checked')\n      $('input[name=\"selectedRow[]\"]').prop('checked', isChecked)\n\n      // get info\n      self.getSelectedInfo()\n    })\n    .on('change', 'input[name=\"selectedRow[]\"]', function () {\n      const $selectors = $('input[name=\"selectedRow[]\"]')\n      const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n      const prop = $selectedRow === $selectors.length\n        ? 'checked'\n        : 'indeterminate'\n\n      // reset props\n      $('#check-handle')\n        .prop('indeterminate', false)\n        .prop('checked', false)\n\n      if ($selectedRow) {\n        $('#check-handle').prop(prop, true)\n      }\n\n      // get info\n      self.getSelectedInfo()\n    })\n  }\n\n  clearSelected () {\n    const self = this\n    // clear selected rows\n    $('#myTable').on('page.dt', function () {\n      self.clearSelectedRows()\n    })\n    $('#clear-search').on('click', function () {\n      self.clearSelectedRows()\n    })\n  }\n\n  clearSelectedRows () {\n    $('#check-handle')\n      .prop('indeterminate', false)\n      .prop('checked', false)\n      .trigger('change')\n  }\n\n  table2 () {\n    $('#myTable2').DataTable({\n      dom: `<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\n        <'table-responsive'tr>\n        <'row align-items-center'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 d-flex justify-content-end'p>>`,\n      language: {\n        paginate: {\n          previous: '<i class=\"fa fa-lg fa-angle-left\"></i>',\n          next: '<i class=\"fa fa-lg fa-angle-right\"></i>'\n        }\n      },\n      autoWidth: false,\n      ajax: 'assets/data/products.json',\n      deferRender: true,\n      order: [ 1, 'asc' ],\n      columns: [\n        { data: 'name', className: 'align-middle' },\n        { data: 'inventory', className: 'align-middle' },\n        { data: 'variant', className: 'align-middle' },\n        { data: 'prices', className: 'align-middle' },\n        { data: 'sales', className: 'align-middle' },\n        { data: 'actions', className: 'align-middle text-right', orderable: false, searchable: false }\n      ],\n      columnDefs: [{\n        targets: 0,\n        render: function (data, type, row, meta) {\n          return `<a href=\"#${row.id}\" class=\"tile tile-img mr-1\">\n            <img class=\"img-fluid\" src=\"assets/images/dummy/img-${row.img}.jpg\" alt=\"Card image cap\">\n          </a>\n          <a href=\"#${row.id}\">${row.name}</a>`\n        }\n      }, {\n        targets: 5,\n        render: function (data, type, row, meta) {\n          return `<a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"fa fa-pencil-alt\"></i></a>\n          <a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"far fa-trash-alt\"></i></a>`\n        }\n      }]\n    })\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new DataTablesDemo()\n})\n"]}